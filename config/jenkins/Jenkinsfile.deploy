pipeline {
    agent any

    parameters {
        string(name: 'VM_USER', description: 'Usuario SSH de la VM en Azure')
        string(name: 'VM_IP', description: 'IP pública de la VM en Azure')
    }

    stages {
        stage('Connect to VM') {
            steps {
                script {
                    sshagent(['azure_vm_key']) {
                        sh """
                            ssh -o StrictHostKeyChecking=no ${params.VM_USER}@${params.VM_IP} "echo 'Conectado a \$(hostname)'"
                        """
                    }
                }
            }
        }

		stage('Check & Install Docker') {
			steps {
				withCredentials([sshUserPrivateKey(credentialsId: 'azure_vm_key', keyFileVariable: 'SSH_KEY')]) {
					sh '''
							if command -v docker >/dev/null 2>&1; then
								echo 'Docker está instalado:'
								docker --version
							else
								apt-get install -y apt-transport-https ca-certificates curl 
								
								software-properties-common

								sudo apt-get -y update

								sudo install -m 0755 -d /etc/apt/keyrings

								sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc

								sudo chmod a+r /etc/apt/keyrings/docker.asc

								echo \
								 	"deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
								 	$(. /etc/os-release && echo "${UBUNTU_CODENAME:-$VERSION_CODENAME}") stable" | \
								 	sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

								sudo apt-get update

								sudo apt-get -y install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

								docker --version
							fi
					'''
				}
			}
		}
    }
}


// pipeline {
//     agent any

//     triggers {
//         githubPush()
//     }

//     stages {

// 		stage('Check & Install Docker') {
// 			steps {
// 				withCredentials([sshUserPrivateKey(credentialsId: 'azure_vm_key', keyFileVariable: 'SSH_KEY')]) {
// 					sh '''
// 						ssh -i $SSH_KEY -o StrictHostKeyChecking=no azureuser@MI_IP_AZURE "
// 							if command -v docker >/dev/null 2>&1; then
// 								echo 'Docker está instalado:'
// 								docker --version
// 							else

// 								apt-get install -y apt-transport-https ca-certificates curl 
								
// 								software-properties-common

// 								sudo apt-get -y update

// 								sudo install -m 0755 -d /etc/apt/keyrings

// 								sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc

// 								sudo chmod a+r /etc/apt/keyrings/docker.asc

// 								echo \
// 								 	"deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
// 								 	$(. /etc/os-release && echo "${UBUNTU_CODENAME:-$VERSION_CODENAME}") stable" | \
// 								 	sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

// 								sudo apt-get update

// 								sudo apt-get -y install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

// 								docker --version
// 							fi
// 						"
// 					'''
// 				}
// 			}
// 		}
		
// 		stage('Init') {
//             steps {
//                 withCredentials([sshUserPrivateKey(credentialsId: 'azure_vm_key', keyFileVariable: 'SSH_KEY')]) {
//                     sh '''
//                         ssh -i $SSH_KEY -o StrictHostKeyChecking=no azureuser_webhooks@20.64.146.117 "
// 							mkdir -p /var/www/express-webhook &&
//                             cd /var/www/express-webhook &&
//                             git pull 
//                         "
//                     '''
//                 }
//             }
//         }

//     }
// }

