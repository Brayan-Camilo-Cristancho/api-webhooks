pipeline {
    agent any

    parameters {
        string(name: 'VM_USER', defaultValue: 'azureuser_webhooks', description: 'Usuario SSH de la VM en Azure')
        string(name: 'VM_IP', defaultValue: '20.64.146.117', description: 'IP pública de la VM en Azure')
        string(name: 'TAG', defaultValue: 'latest', description: 'Tag a descargar')
        string(name: 'NAME_APP', defaultValue: 'webhook_api_artifact', description: 'Nombre de la aplicación')
    }

    stages {
        stage('Deploy Full Flow') {
            steps {
                sshagent(['azure_vm_key']) {
                    withCredentials([
                        string(credentialsId: 'docker-user', variable: 'DOCKER_USER'),
                        string(credentialsId: 'docker-webhook', variable: 'DOCKER_PASS')
                    ]) {
                        sh """
                            scp -o StrictHostKeyChecking=no config/scripts/deploy.sh ${VM_USER}@${VM_IP}:/tmp/deploy.sh
                            ssh -o StrictHostKeyChecking=no ${VM_USER}@${VM_IP} \
                            "DOCKER_USER=${DOCKER_USER} DOCKER_PASS=${DOCKER_PASS} NAME_APP=${NAME_APP} TAG=${TAG} bash /tmp/deploy.sh"
                        """
                    }
                }
            }
        }

        stage('Validate Deployment') {
            steps {
                sshagent(['azure_vm_key']) {
                    sh """
                        scp -o StrictHostKeyChecking=no config/scripts/validate.sh ${VM_USER}@${VM_IP}:/tmp/validate.sh
                        ssh -o StrictHostKeyChecking=no ${VM_USER}@${VM_IP} \
                            NAME_APP=${NAME_APP} bash /tmp/validate.sh
                    """
                }
            }
        }
    }
}
